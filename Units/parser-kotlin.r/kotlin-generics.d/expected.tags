Bar	input.kt	/^class Bar<T, U>(val a: T, val b: U): Foo<T>$/;"	c
Baz	input.kt	/^class Baz <T, U: Pair<String,Pair<Int, Double>>(val c: T, val d: U): Foo<T>$/;"	c
Foo	input.kt	/^interface Foo<T> {$/;"	i
a	input.kt	/^class Bar<T, U>(val a: T, val b: U): Foo<T>$/;"	C
b	input.kt	/^class Bar<T, U>(val a: T, val b: U): Foo<T>$/;"	C
c	input.kt	/^class Baz <T, U: Pair<String,Pair<Int, Double>>(val c: T, val d: U): Foo<T>$/;"	C
d	input.kt	/^class Baz <T, U: Pair<String,Pair<Int, Double>>(val c: T, val d: U): Foo<T>$/;"	C
genericFunction1	input.kt	/^    fun<T: Any> genericFunction1() = 41$/;"	m
genericFunction2	input.kt	/^    fun<T: Pair<String,Pair<Int, Double>>> genericFunction2() = 42$/;"	m
genericFunction3	input.kt	/^    fun <T> genericFunction3() = 43$/;"	m
